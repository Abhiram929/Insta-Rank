import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Users, TrendingUp, Heart, Eye } from "lucide-react";
import { motion } from "framer-motion";

export default function StatsOverview({ profiles }) {
  const totalFollowers = profiles.reduce((sum, p) => sum + (p.followers || 0), 0);
  const avgEngagement = profiles.reduce((sum, p) => {
    const engagement = p.posts_count > 0 ? ((p.total_views || 0) / p.posts_count / (p.followers || 1)) * 100 : 0;
    return sum + engagement;
  }, 0) / profiles.length;
  const topProfile = profiles.sort((a, b) => b.followers - a.followers)[0];
  const totalPosts = profiles.reduce((sum, p) => sum + (p.posts_count || 0), 0);

  const stats = [
    {
      title: "Total Followers",
      value: (totalFollowers / 1000000).toFixed(1) + "M",
      icon: Users,
      gradient: "from-purple-500 to-pink-500",
      bgGradient: "from-purple-50 to-pink-50"
    },
    {
      title: "Avg Engagement Rate",
      value: avgEngagement.toFixed(2) + "%",
      icon: Heart,
      gradient: "from-pink-500 to-rose-500",
      bgGradient: "from-pink-50 to-rose-50"
    },
    {
      title: "Top Profile",
      value: topProfile?.username || "-",
      icon: TrendingUp,
      gradient: "from-orange-500 to-amber-500",
      bgGradient: "from-orange-50 to-amber-50"
    },
    {
      title: "Total Posts",
      value: totalPosts.toLocaleString(),
      icon: Eye,
      gradient: "from-violet-500 to-purple-500",
      bgGradient: "from-violet-50 to-purple-50"
    }
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      {stats.map((stat, index) => (
        <motion.div
          key={stat.title}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: index * 0.1 }}
        >
          <Card className="relative overflow-hidden border-none shadow-lg hover:shadow-xl transition-shadow duration-300">
            <div className={`absolute inset-0 bg-gradient-to-br ${stat.bgGradient} opacity-50`} />
            <CardHeader className="relative pb-2">
              <div className="flex justify-between items-start">
                <CardTitle className="text-sm font-medium text-gray-600">
                  {stat.title}
                </CardTitle>
                <div className={`p-2 rounded-lg bg-gradient-to-br ${stat.gradient}`}>
                  <stat.icon className="w-4 h-4 text-white" />
                </div>
              </div>
            </CardHeader>
            <CardContent className="relative">
              <div className="text-3xl font-bold bg-gradient-to-r ${stat.gradient} bg-clip-text text-transparent">
                {stat.value}
              </div>
            </CardContent>
          </Card>
        </motion.div>
      ))}
    </div>
  );
}